{
  "swagger": "2.0",
  "info": {
    "title": "Products",
    "description": "Products API",
    "version": "1.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "product",
      "description": "Everything about product"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/product": {
      "post": {
        "tags": ["product"],
        "summary": "Add a new product",
        "description": "",
        "operationId": "addProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create a new product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created",
            "schema": {
              "properties": {
                "product": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          },
          "422": {
            "description": "Title can not null"
          }
        }
      },
      "get": {
        "tags": ["product"],
        "summary": "List all products",
        "operationId": "listProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Products list",
            "schema": {
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No products found"
          }
        }
      }
    },
    "/product/{id}": {
      "put": {
        "tags": ["product"],
        "summary": "Update product",
        "description": "",
        "operationId": "updateProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product that needs to be updated",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product Updated",
            "schema": {
              "properties": {
                "product": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          },
          "422": {
            "description": "Invalid id or title"
          }
        }
      },
      "delete": {
        "tags": ["product"],
        "summary": "Remove product",
        "description": "",
        "operationId": "removeProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product that needs to be remove",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Product Deleted"
          },
          "422": {
            "description": "Product not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "required": ["title"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "title": {
          "type": "string",
          "example": "Product One"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "createdAt": {
          "type": "string",
          "example": "2022-06-23T12:13:43.108Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2022-06-23T12:13:43.108Z"
        }
      },
      "xml": {
        "name": "Product"
      }
    },
    "CreateOrUpdateProduct": {
      "type": "object",
      "required": ["title"],
      "properties": {
        "title": {
          "type": "string",
          "example": "Product One"
        }
      },
      "xml": {
        "name": "CreateOrUpdateProduct"
      }
    }
  }
}
